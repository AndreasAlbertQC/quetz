worker_processes  1;
# Nginx shall have read access to files created by Quetz
# Same user should be used to run both applications
# Using root for development even if it's not recommended
user    root;
pid        /tmp/nginx.pid;

events {
    worker_connections  1024;
}

http {
    map $cache $control {
        1       "max-age=1200";
    }
    map $uri $cache {
        ~*\.(json)$    1;
    }
    proxy_temp_path /tmp/proxy_temp;
    client_body_temp_path /tmp/client_temp;
    fastcgi_temp_path /tmp/fastcgi_temp;
    uwsgi_temp_path /tmp/uwsgi_temp;
    scgi_temp_path /tmp/scgi_temp;

    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;

    keepalive_timeout  65;

    gzip  on;
    gzip_types  application/json;

    client_max_body_size 100m;

    upstream quetz {
      server quetz-web:8000;
    }

    server {
        listen      8080;
        add_header  Cache-Control $control;

        server_name  localhost;

        location / {
          proxy_set_header Host $http_host;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection $connection_upgrade;
          proxy_redirect off;
          proxy_buffering off;
          proxy_pass http://quetz;
        }

        location /files/channels/ {
          # path for channels
          alias /quetz-deployment/channels/;
        }
    }

    map $http_upgrade $connection_upgrade {
      default upgrade;
      '' close;
    }
}
